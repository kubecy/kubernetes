---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: devops
  labels:
    app: jenkins
spec:
  replicas: 1  
  strategy:
    type: Recreate  
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      nodeSelector:
        jenkins: 'true'
      serviceAccountName: devops-sa
      securityContext:
        fsGroup: 1000  
        runAsUser: 1000
        runAsGroup: 1000
      containers:
      - name: jenkins
        image: registry.cn-guangzhou.aliyuncs.com/kubecy/jenkins:jdk17 
        imagePullPolicy: IfNotPresent  
        resources:
          limits:
            memory: "4Gi"  
            cpu: "2000m"
          requests:
            memory: "2Gi"
            cpu: "1000m"
        env:
        - name: JAVA_OPTS
          value: >-
            -Xmx3g -Xms1g  
            -Duser.timezone=Asia/Shanghai
            -Dhudson.slaves.NodeProvisioner.initialDelay=0
            -Dhudson.slaves.NodeProvisioner.MARGIN=50
            -Dhudson.slaves.NodeProvisioner.MARGIN0=0.85
            -Djenkins.install.runSetupWizard=false  
        ports:
        - containerPort: 8080
          name: web
          protocol: TCP
        - containerPort: 50000
          name: agent
          protocol: TCP
        volumeMounts:
        - name: jenkins-data
          mountPath: /var/jenkins_home
          readOnly: false
        livenessProbe:
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 120  
          periodSeconds: 20
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 15
      volumes:
      - name: jenkins-data
        persistentVolumeClaim:
          claimName: jenkins-data-pvc 
